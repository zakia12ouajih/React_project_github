{"version":3,"file":"index.mjs","sources":["../src/built-in-definitions.ts","../src/add-platform-specific-polyfills.ts","../src/helpers.ts","../src/index.ts"],"sourcesContent":["import corejs2Polyfills from \"@babel/compat-data/corejs2-built-ins\";\n\ntype ObjectMap<V> = { [name: string]: V };\n\ntype PolyfillDescriptor<T> = {\n  name: string;\n  pure: string | null;\n  global: string[];\n  meta: T | null;\n};\n\ntype CoreJS2Meta = {\n  minRuntimeVersion: string | null;\n};\n\nconst define = <T>(\n  name: string,\n  pure?: string | null,\n  global: string[] = [],\n  meta?: T | null,\n): PolyfillDescriptor<T> => {\n  return { name, pure, global, meta };\n};\n\nconst pureAndGlobal = (\n  pure: string,\n  global: string[],\n  minRuntimeVersion: string | null = null,\n) => define<CoreJS2Meta>(global[0], pure, global, { minRuntimeVersion });\n\nconst globalOnly = (global: string[]) =>\n  define<CoreJS2Meta>(global[0], null, global);\n\nconst pureOnly = (pure: string, name: string) =>\n  define<CoreJS2Meta>(name, pure, []);\n\nconst ArrayNatureIterators = [\n  \"es6.object.to-string\",\n  \"es6.array.iterator\",\n  \"web.dom.iterable\",\n];\n\nexport const CommonIterators = [\"es6.string.iterator\", ...ArrayNatureIterators];\n\nconst PromiseDependencies = [\"es6.object.to-string\", \"es6.promise\"];\n\nexport const BuiltIns: ObjectMap<PolyfillDescriptor<CoreJS2Meta>> = {\n  DataView: globalOnly([\"es6.typed.data-view\"]),\n  Float32Array: globalOnly([\"es6.typed.float32-array\"]),\n  Float64Array: globalOnly([\"es6.typed.float64-array\"]),\n  Int8Array: globalOnly([\"es6.typed.int8-array\"]),\n  Int16Array: globalOnly([\"es6.typed.int16-array\"]),\n  Int32Array: globalOnly([\"es6.typed.int32-array\"]),\n  Map: pureAndGlobal(\"map\", [\"es6.map\", ...CommonIterators]),\n  Number: globalOnly([\"es6.number.constructor\"]),\n  Promise: pureAndGlobal(\"promise\", PromiseDependencies),\n  RegExp: globalOnly([\"es6.regexp.constructor\"]),\n  Set: pureAndGlobal(\"set\", [\"es6.set\", ...CommonIterators]),\n  Symbol: pureAndGlobal(\"symbol\", [\"es6.symbol\"]),\n  Uint8Array: globalOnly([\"es6.typed.uint8-array\"]),\n  Uint8ClampedArray: globalOnly([\"es6.typed.uint8-clamped-array\"]),\n  Uint16Array: globalOnly([\"es6.typed.uint16-array\"]),\n  Uint32Array: globalOnly([\"es6.typed.uint32-array\"]),\n  WeakMap: pureAndGlobal(\"weak-map\", [\"es6.weak-map\", ...CommonIterators]),\n  WeakSet: pureAndGlobal(\"weak-set\", [\"es6.weak-set\", ...CommonIterators]),\n\n  setImmediate: pureOnly(\"set-immediate\", \"web.immediate\"),\n  clearImmediate: pureOnly(\"clear-immediate\", \"web.immediate\"),\n  parseFloat: pureOnly(\"parse-float\", \"es6.parse-float\"),\n  parseInt: pureOnly(\"parse-int\", \"es6.parse-int\"),\n};\n\nexport const InstanceProperties: ObjectMap<PolyfillDescriptor<CoreJS2Meta>> = {\n  __defineGetter__: globalOnly([\"es7.object.define-getter\"]),\n  __defineSetter__: globalOnly([\"es7.object.define-setter\"]),\n  __lookupGetter__: globalOnly([\"es7.object.lookup-getter\"]),\n  __lookupSetter__: globalOnly([\"es7.object.lookup-setter\"]),\n  anchor: globalOnly([\"es6.string.anchor\"]),\n  big: globalOnly([\"es6.string.big\"]),\n  bind: globalOnly([\"es6.function.bind\"]),\n  blink: globalOnly([\"es6.string.blink\"]),\n  bold: globalOnly([\"es6.string.bold\"]),\n  codePointAt: globalOnly([\"es6.string.code-point-at\"]),\n  copyWithin: globalOnly([\"es6.array.copy-within\"]),\n  endsWith: globalOnly([\"es6.string.ends-with\"]),\n  entries: globalOnly(ArrayNatureIterators),\n  every: globalOnly([\"es6.array.every\"]),\n  fill: globalOnly([\"es6.array.fill\"]),\n  filter: globalOnly([\"es6.array.filter\"]),\n  finally: globalOnly([\"es7.promise.finally\", ...PromiseDependencies]),\n  find: globalOnly([\"es6.array.find\"]),\n  findIndex: globalOnly([\"es6.array.find-index\"]),\n  fixed: globalOnly([\"es6.string.fixed\"]),\n  flags: globalOnly([\"es6.regexp.flags\"]),\n  flatMap: globalOnly([\"es7.array.flat-map\"]),\n  fontcolor: globalOnly([\"es6.string.fontcolor\"]),\n  fontsize: globalOnly([\"es6.string.fontsize\"]),\n  forEach: globalOnly([\"es6.array.for-each\"]),\n  includes: globalOnly([\"es6.string.includes\", \"es7.array.includes\"]),\n  indexOf: globalOnly([\"es6.array.index-of\"]),\n  italics: globalOnly([\"es6.string.italics\"]),\n  keys: globalOnly(ArrayNatureIterators),\n  lastIndexOf: globalOnly([\"es6.array.last-index-of\"]),\n  link: globalOnly([\"es6.string.link\"]),\n  map: globalOnly([\"es6.array.map\"]),\n  match: globalOnly([\"es6.regexp.match\"]),\n  name: globalOnly([\"es6.function.name\"]),\n  padStart: globalOnly([\"es7.string.pad-start\"]),\n  padEnd: globalOnly([\"es7.string.pad-end\"]),\n  reduce: globalOnly([\"es6.array.reduce\"]),\n  reduceRight: globalOnly([\"es6.array.reduce-right\"]),\n  repeat: globalOnly([\"es6.string.repeat\"]),\n  replace: globalOnly([\"es6.regexp.replace\"]),\n  search: globalOnly([\"es6.regexp.search\"]),\n  small: globalOnly([\"es6.string.small\"]),\n  some: globalOnly([\"es6.array.some\"]),\n  sort: globalOnly([\"es6.array.sort\"]),\n  split: globalOnly([\"es6.regexp.split\"]),\n  startsWith: globalOnly([\"es6.string.starts-with\"]),\n  strike: globalOnly([\"es6.string.strike\"]),\n  sub: globalOnly([\"es6.string.sub\"]),\n  sup: globalOnly([\"es6.string.sup\"]),\n  toISOString: globalOnly([\"es6.date.to-iso-string\"]),\n  toJSON: globalOnly([\"es6.date.to-json\"]),\n  toString: globalOnly([\n    \"es6.object.to-string\",\n    \"es6.date.to-string\",\n    \"es6.regexp.to-string\",\n  ]),\n  trim: globalOnly([\"es6.string.trim\"]),\n  trimEnd: globalOnly([\"es7.string.trim-right\"]),\n  trimLeft: globalOnly([\"es7.string.trim-left\"]),\n  trimRight: globalOnly([\"es7.string.trim-right\"]),\n  trimStart: globalOnly([\"es7.string.trim-left\"]),\n  values: globalOnly(ArrayNatureIterators),\n};\n\n// This isn't present in older @babel/compat-data versions\nif (\"es6.array.slice\" in corejs2Polyfills) {\n  InstanceProperties.slice = globalOnly([\"es6.array.slice\"]);\n}\n\nexport const StaticProperties: ObjectMap<\n  ObjectMap<PolyfillDescriptor<CoreJS2Meta>>\n> = {\n  Array: {\n    from: pureAndGlobal(\"array/from\", [\n      \"es6.symbol\",\n      \"es6.array.from\",\n      ...CommonIterators,\n    ]),\n    isArray: pureAndGlobal(\"array/is-array\", [\"es6.array.is-array\"]),\n    of: pureAndGlobal(\"array/of\", [\"es6.array.of\"]),\n  },\n\n  Date: {\n    now: pureAndGlobal(\"date/now\", [\"es6.date.now\"]),\n  },\n\n  JSON: {\n    stringify: pureOnly(\"json/stringify\", \"es6.symbol\"),\n  },\n\n  Math: {\n    // 'Math' was not included in the 7.0.0\n    // release of '@babel/runtime'. See issue https://github.com/babel/babel/pull/8616.\n    acosh: pureAndGlobal(\"math/acosh\", [\"es6.math.acosh\"], \"7.0.1\"),\n    asinh: pureAndGlobal(\"math/asinh\", [\"es6.math.asinh\"], \"7.0.1\"),\n    atanh: pureAndGlobal(\"math/atanh\", [\"es6.math.atanh\"], \"7.0.1\"),\n    cbrt: pureAndGlobal(\"math/cbrt\", [\"es6.math.cbrt\"], \"7.0.1\"),\n    clz32: pureAndGlobal(\"math/clz32\", [\"es6.math.clz32\"], \"7.0.1\"),\n    cosh: pureAndGlobal(\"math/cosh\", [\"es6.math.cosh\"], \"7.0.1\"),\n    expm1: pureAndGlobal(\"math/expm1\", [\"es6.math.expm1\"], \"7.0.1\"),\n    fround: pureAndGlobal(\"math/fround\", [\"es6.math.fround\"], \"7.0.1\"),\n    hypot: pureAndGlobal(\"math/hypot\", [\"es6.math.hypot\"], \"7.0.1\"),\n    imul: pureAndGlobal(\"math/imul\", [\"es6.math.imul\"], \"7.0.1\"),\n    log1p: pureAndGlobal(\"math/log1p\", [\"es6.math.log1p\"], \"7.0.1\"),\n    log10: pureAndGlobal(\"math/log10\", [\"es6.math.log10\"], \"7.0.1\"),\n    log2: pureAndGlobal(\"math/log2\", [\"es6.math.log2\"], \"7.0.1\"),\n    sign: pureAndGlobal(\"math/sign\", [\"es6.math.sign\"], \"7.0.1\"),\n    sinh: pureAndGlobal(\"math/sinh\", [\"es6.math.sinh\"], \"7.0.1\"),\n    tanh: pureAndGlobal(\"math/tanh\", [\"es6.math.tanh\"], \"7.0.1\"),\n    trunc: pureAndGlobal(\"math/trunc\", [\"es6.math.trunc\"], \"7.0.1\"),\n  },\n\n  Number: {\n    EPSILON: pureAndGlobal(\"number/epsilon\", [\"es6.number.epsilon\"]),\n    MIN_SAFE_INTEGER: pureAndGlobal(\"number/min-safe-integer\", [\n      \"es6.number.min-safe-integer\",\n    ]),\n    MAX_SAFE_INTEGER: pureAndGlobal(\"number/max-safe-integer\", [\n      \"es6.number.max-safe-integer\",\n    ]),\n    isFinite: pureAndGlobal(\"number/is-finite\", [\"es6.number.is-finite\"]),\n    isInteger: pureAndGlobal(\"number/is-integer\", [\"es6.number.is-integer\"]),\n    isSafeInteger: pureAndGlobal(\"number/is-safe-integer\", [\n      \"es6.number.is-safe-integer\",\n    ]),\n    isNaN: pureAndGlobal(\"number/is-nan\", [\"es6.number.is-nan\"]),\n    parseFloat: pureAndGlobal(\"number/parse-float\", [\"es6.number.parse-float\"]),\n    parseInt: pureAndGlobal(\"number/parse-int\", [\"es6.number.parse-int\"]),\n  },\n\n  Object: {\n    assign: pureAndGlobal(\"object/assign\", [\"es6.object.assign\"]),\n    create: pureAndGlobal(\"object/create\", [\"es6.object.create\"]),\n    defineProperties: pureAndGlobal(\"object/define-properties\", [\n      \"es6.object.define-properties\",\n    ]),\n    defineProperty: pureAndGlobal(\"object/define-property\", [\n      \"es6.object.define-property\",\n    ]),\n    entries: pureAndGlobal(\"object/entries\", [\"es7.object.entries\"]),\n    freeze: pureAndGlobal(\"object/freeze\", [\"es6.object.freeze\"]),\n    getOwnPropertyDescriptor: pureAndGlobal(\n      \"object/get-own-property-descriptor\",\n      [\"es6.object.get-own-property-descriptor\"],\n    ),\n    getOwnPropertyDescriptors: pureAndGlobal(\n      \"object/get-own-property-descriptors\",\n      [\"es7.object.get-own-property-descriptors\"],\n    ),\n    getOwnPropertyNames: pureAndGlobal(\"object/get-own-property-names\", [\n      \"es6.object.get-own-property-names\",\n    ]),\n    getOwnPropertySymbols: pureAndGlobal(\"object/get-own-property-symbols\", [\n      \"es6.symbol\",\n    ]),\n    getPrototypeOf: pureAndGlobal(\"object/get-prototype-of\", [\n      \"es6.object.get-prototype-of\",\n    ]),\n    is: pureAndGlobal(\"object/is\", [\"es6.object.is\"]),\n    isExtensible: pureAndGlobal(\"object/is-extensible\", [\n      \"es6.object.is-extensible\",\n    ]),\n    isFrozen: pureAndGlobal(\"object/is-frozen\", [\"es6.object.is-frozen\"]),\n    isSealed: pureAndGlobal(\"object/is-sealed\", [\"es6.object.is-sealed\"]),\n    keys: pureAndGlobal(\"object/keys\", [\"es6.object.keys\"]),\n    preventExtensions: pureAndGlobal(\"object/prevent-extensions\", [\n      \"es6.object.prevent-extensions\",\n    ]),\n    seal: pureAndGlobal(\"object/seal\", [\"es6.object.seal\"]),\n    setPrototypeOf: pureAndGlobal(\"object/set-prototype-of\", [\n      \"es6.object.set-prototype-of\",\n    ]),\n    values: p